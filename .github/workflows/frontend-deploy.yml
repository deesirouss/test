name: Frontend Deploy
#testing slack notification

on:
  push:
    branches: [ main ]
    paths: [ 'frontend/**', '.github/**' ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm install
    
    - name: Build application
      working-directory: ./frontend
      run: npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
    
    # - name: Deploy to S3
    #   uses: jakejarvis/s3-sync-action@master
    #   with:
    #     args: --delete
    #   env:
    #     AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     AWS_REGION: ${{ secrets.AWS_REGION }}
    #     SOURCE_DIR: 'frontend/build'

    - name: Deploy to S3
      run: |
        if ! aws s3 sync frontend/build s3://${{ secrets.S3_BUCKET_NAME }} --delete; then
            echo "‚ùå S3 sync failed"
            exit 1
        fi
        echo "‚úÖ S3 sync completed successfully"
    
    - name: Invalidate CloudFront
      run: |
        echo "Invalidating CloudFront distribution..."
        if ! aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"; then
          echo "‚ùå CloudFront invalidation failed"
          exit 1
        fi
        echo "‚úÖ CloudFront invalidation completed successfully"
        echo "üéâ Frontend deployed successfully to S3 + CloudFront!"