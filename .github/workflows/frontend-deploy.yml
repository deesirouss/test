# name: Frontend Deploy

# on:
#   push:
#     branches: [ dev, main ]
#     paths: [ 'frontend/**' ]

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
    
#     steps:
#     - uses: actions/checkout@v4
    
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20'
#         cache: 'npm'
#         cache-dependency-path: frontend/package-lock.json
    
#     - name: Install dependencies
#       working-directory: ./frontend
#       run: npm ci
    
#     - name: Build application
#       working-directory: ./frontend
#       run: npm run build
#       env:
#         REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
    
#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v4
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}
    
#     - name: Deploy to S3
#       uses: jakejarvis/s3-sync-action@master
#       with:
#         args: --delete
#       env:
#         AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         AWS_REGION: ${{ secrets.AWS_REGION }}
#         SOURCE_DIR: 'frontend/build'
    
#     - name: Invalidate CloudFront
#       run: |
#         echo "Invalidating CloudFront distribution..."
#         if ! aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"; then
#           echo "‚ùå CloudFront invalidation failed"
#           exit 1
#         fi
#         echo "‚úÖ CloudFront invalidation completed successfully"
#         echo "üéâ Frontend deployed successfully to S3 + CloudFront!"